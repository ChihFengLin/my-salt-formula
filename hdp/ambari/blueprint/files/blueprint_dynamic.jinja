{%- from 'hdp/ambari/map.jinja' import ambari_props with context %}
{%- set hdfs_ha_name = ambari_props.cluster_name | regex_replace('_','-') %}
{
  "configurations" : [
{% if security|lower == "mit-kdc" or security|lower == "active-directory" %}
    {
      "kerberos-env": {
{% if security|lower == "active-directory" %}
        "ldap_url": "{{ security_options.ldap_url }}",
        "container_dn": "{{ security_options.container_dn }}",
{% endif %}
        "manage_identities": "true",
        "install_packages": "true",
        "realm" : "{{ security_options.realm }}",
        "kdc_type" : "{{ security }}",
        "kdc_hosts" : "{{ security_options.external_hostname|default(ansible_fqdn,true) }}",
        "admin_server_host" : "{{ security_options.external_hostname|default(ansible_fqdn,true) }}"
      }
    },
    {
      "krb5-conf": {
          "manage_krb5_conf" : "true"
      }
    },
{% endif %}
{% if rangeradmin_hosts|length > 0 %}
    {
      "admin-properties" : {
        "DB_FLAVOR" : "{{ database_config.database_type|regex_replace('mariadb', 'mysql')|upper }}",
        "SQL_CONNECTOR_JAR" : "{{ database_config.mysql.jdbc_location }}",
        "db_host" : "{{ grains.fqdn }}",
        "db_name" : "{{ database_config.database_options.ranger.db_name }}",
        "db_user" : "ranger",
        "db_password" : "{{ database_config.database_options.ranger.db_password }}",
        "policymgr_external_url" : "http://%HOSTGROUP::{{ rangeradmin_groups[0] }}%:6080"
      }
    },
    {
      "ranger-admin-site" : {
        "ranger.externalurl" : "http://%HOSTGROUP::{{ rangeradmin_groups[0] }}%:6080",
        {% if database_config.database_type == "mysql" or database_config.database_type == "mariadb" -%}
        "ranger.jpa.jdbc.driver": "com.mysql.jdbc.Driver",
        "ranger.jpa.jdbc.url": "jdbc:mysql://{{ grains.fqdn }}:{{ database_config.mysql.port }}/{{ database_config.database_options.ranger.db_name }}",
        {% endif -%}
        "ranger.audit.source.type" : "solr",
        "ranger.audit.solr.zookeepers" : "{% for zk in zookeeper_hosts %}{{ zk }}:2181{% if not loop.last %},{% endif %}{% endfor %}/infra-solr"
      }
    },
{% if ambari_props.ranger_options.enable_plugins|default(no) %}
{% if namenode_groups|length > 0 %}
    {
      "ranger-hdfs-plugin-properties" : {
        "ranger-hdfs-plugin-enabled" : "Yes"
      }
    },
    {
      "ranger-hdfs-security" : {
        "ranger.plugin.hdfs.policy.rest.url" : "http://{{ grains.fqdn }}:6080",
        "ranger.plugin.hdfs.policy.pollIntervalMs" : "30000"
      }
    },
    {
      "ranger-hdfs-audit" : {
        "xasecure.audit.destination.db" : "false",
        "xasecure.audit.destination.hdfs" : "true",
        "xasecure.audit.destination.hdfs.dir" : "hdfs://{% if namenode_groups|length > 1 %}{{ hdfs_ha_name }}{% else %}{{ namenode_hosts[0] }}:8020{% endif %}/ranger/audit",
        "xasecure.audit.destination.solr" : "true",
        "xasecure.audit.destination.solr.zookeepers" : "{% for zk in zookeeper_hosts %}{{ zk }}:2181{% if not loop.last %},{% endif %}{% endfor %}/infra-solr"
      }
    },
    {
      "ranger-hive-plugin-properties" : {
        "ranger-hive-plugin-enabled" : "Yes"
      }
    },
    {
      "ranger-hive-security" : {
        "ranger.plugin.hive.policy.rest.url" : "http://{{ grains.fqdn }}:6080",
        "ranger.plugin.hive.policy.pollIntervalMs" : "30000"
      }
    },
    {
      "ranger-hive-audit" : {
        "xasecure.audit.destination.db" : "false",
        "xasecure.audit.destination.hdfs" : "true",
        "xasecure.audit.destination.hdfs.dir" : "hdfs://{% if namenode_groups|length > 1 %}{{ hdfs_ha_name }}{% else %}{{ namenode_hosts }}:8020{% endif %}/ranger/audit",
        "xasecure.audit.destination.solr" : "true",
        "xasecure.audit.destination.solr.zookeepers" : "{% for zk in zookeeper_hosts %}{{ zk }}:2181{% if not loop.last %},{% endif %}{% endfor %}/infra-solr"
      }
    },
    {
      "ranger-yarn-plugin-properties" : {
        "ranger-yarn-plugin-enabled" : "Yes"
      }
    },
    {
      "ranger-yarn-security" : {
        "ranger.plugin.yarn.policy.rest.url" : "http://{{ grains.fqdn }}:6080",
        "ranger.plugin.yarn.policy.pollIntervalMs" : "30000"
      }
    },
    {
      "ranger-yarn-audit" : {
        "xasecure.audit.destination.db" : "false",
        "xasecure.audit.destination.hdfs" : "true",
        "xasecure.audit.destination.hdfs.dir" : "hdfs://{% if namenode_groups|length > 1 %}{{ hdfs_ha_name }}{% else %}{{ namenode_hosts }}:8020{% endif %}/ranger/audit",
        "xasecure.audit.destination.solr" : "true",
        "xasecure.audit.destination.solr.zookeepers" : "{% for zk in zookeeper_hosts %}{{ zk }}:2181{% if not loop.last %},{% endif %}{% endfor %}/infra-solr"
      }
    },
    {
      "ranger-hbase-plugin-properties" : {
        "ranger-hbase-plugin-enabled" : "Yes"
      }
    },
    {
      "ranger-hbase-security" : {
        "ranger.plugin.hbase.policy.rest.url" : "http://{{ grains.fqdn }}:6080",
        "ranger.plugin.hbase.policy.pollIntervalMs" : "30000"
      }
    },
    {
      "ranger-hbase-audit" : {
        "xasecure.audit.destination.db" : "false",
        "xasecure.audit.destination.hdfs" : "true",
        "xasecure.audit.destination.hdfs.dir" : "hdfs://{% if namenode_groups|length > 1 %}{{ hdfs_ha_name }}{% else %}{{ namenode_hosts }}:8020{% endif %}/ranger/audit",
        "xasecure.audit.destination.solr" : "true",
        "xasecure.audit.destination.solr.zookeepers" : "{% for zk in zookeeper_hosts %}{{ zk }}:2181{% if not loop.last %},{% endif %}{% endfor %}/infra-solr"
      }
    },
{% endif %}
{% if security|lower == "mit-kdc" or security|lower == "active-directory" -%}
    {
      "ranger-storm-plugin-properties" : {
        "ranger-storm-plugin-enabled" : "Yes"
      }
    },
    {
      "ranger-storm-security" : {
        "ranger.plugin.storm.policy.rest.url" : "http://{{ grains.fqdn }}:6080",
        "ranger.plugin.storm.policy.pollIntervalMs" : "30000"
      }
    },
    {
      "ranger-storm-audit" : {
        "xasecure.audit.destination.db" : "false",
{% if namenode_groups|length > 0 %}
        "xasecure.audit.destination.hdfs" : "true",
        "xasecure.audit.destination.hdfs.dir" : "hdfs://{% if namenode_groups|length > 1 %}{{ hdfs_ha_name }}{% else %}{{ namenode_hosts }}:8020{% endif %}/ranger/audit",
{% else %}
        "xasecure.audit.destination.hdfs" : "false",
{% endif %}
        "xasecure.audit.destination.solr" : "true",
        "xasecure.audit.destination.solr.zookeepers" : "{% for zk in zookeeper_hosts %}{{ zk }}:2181{% if not loop.last %},{% endif %}{% endfor %}/infra-solr"
      }
    },
{% endif %}
{% if 'KNOX_GATEWAY' in blueprint_all_services %}
    {
      "ranger-knox-plugin-properties" : {
        "ranger-knox-plugin-enabled" : "Yes"
      }
    },
    {
      "ranger-knox-security" : {
        "ranger.plugin.knox.policy.rest.url" : "http://{{ grains.fqdn }}:6080",
        "ranger.plugin.knox.policy.pollIntervalMs" : "30000"
      }
    },
    {
      "ranger-knox-audit" : {
        "xasecure.audit.destination.db" : "false",
{% if namenode_groups|length > 0 %}
        "xasecure.audit.destination.hdfs" : "true",
        "xasecure.audit.destination.hdfs.dir" : "hdfs://{% if namenode_groups|length > 1 %}{{ hdfs_ha_name }}{% else %}{{ namenode_hosts }}:8020{% endif %}/ranger/audit",
{% else %}
        "xasecure.audit.destination.hdfs" : "false",
{% endif %}
        "xasecure.audit.destination.solr" : "true",
        "xasecure.audit.destination.solr.zookeepers" : "{% for zk in zookeeper_hosts %}{{ zk }}:2181{% if not loop.last %},{% endif %}{% endfor %}/infra-solr"
      }
    },
{% endif %}
{% if 'ATLAS_SERVER' in blueprint_all_services %}
    {
      "ranger-atlas-plugin-properties" : {
        "ranger-atlas-plugin-enabled" : "Yes"
      }
    },
    {
      "ranger-atlas-security" : {
        "ranger.plugin.atlas.policy.rest.url" : "http://{{ grains.fqdn }}:6080",
        "ranger.plugin.atlas.policy.pollIntervalMs" : "30000"
      }
    },
    {
      "ranger-atlas-audit" : {
        "xasecure.audit.destination.db" : "false",
{% if namenode_groups|length > 0 %}
        "xasecure.audit.destination.hdfs" : "true",
        "xasecure.audit.destination.hdfs.dir" : "hdfs://{% if namenode_groups|length > 1 %}{{ hdfs_ha_name }}{% else %}{{ namenode_hosts }}:8020{% endif %}/ranger/audit",
{% else %}
        "xasecure.audit.destination.hdfs" : "false",
{% endif %}
        "xasecure.audit.destination.solr" : "true",
        "xasecure.audit.destination.solr.zookeepers" : "{% for zk in zookeeper_hosts %}{{ zk }}:2181{% if not loop.last %},{% endif %}{% endfor %}/infra-solr"
      }
    },
{% endif %}
    {
      "ranger-kafka-plugin-properties" : {
        "ranger-kafka-plugin-enabled" : "Yes"
      }
    },
    {
      "ranger-kafka-security" : {
        "ranger.plugin.kafka.policy.rest.url" : "http://{{ grains.fqdn }}:6080",
        "ranger.plugin.kafka.policy.pollIntervalMs" : "30000"
      }
    },
    {
      "ranger-kafka-audit" : {
        "xasecure.audit.destination.db" : "false",
{% if namenode_groups|length > 0 %}
        "xasecure.audit.destination.hdfs" : "true",
        "xasecure.audit.destination.hdfs.dir" : "hdfs://{% if namenode_groups|length > 1 %}{{ hdfs_ha_name }}{% else %}{{ namenode_hosts }}:8020{% endif %}/ranger/audit",
{% else %}
        "xasecure.audit.destination.hdfs" : "false",
{% endif %}
        "xasecure.audit.destination.solr" : "true",
        "xasecure.audit.destination.solr.zookeepers" : "{% for zk in zookeeper_hosts %}{{ zk }}:2181{% if not loop.last %},{% endif %}{% endfor %}/infra-solr"
      }
    },
{% endif %}
    {
      "ranger-env" : {
{% if ambari_props.ranger_options.enable_plugins|default(no) %}
{% if namenode_groups|length > 0 %}
        "ranger-hdfs-plugin-enabled" : "Yes",
        "ranger-hive-plugin-enabled" : "Yes",
        "ranger-yarn-plugin-enabled" : "Yes",
        "ranger-hbase-plugin-enabled" : "Yes",
        "ranger-knox-plugin-enabled" : "Yes",
        "ranger-atlas-plugin-enabled" : "Yes",
{% endif %}
{% if security|lower == "mit-kdc" or security|lower == "active-directory" -%}
        "ranger-storm-plugin-enabled" : "Yes",
{% endif %}
        "ranger-kafka-plugin-enabled" : "Yes",
{% endif %}
        "admin_username" : "admin",
        "admin_password" : "{{ ambari_props.ranger_security_options.ranger_admin_password }}",
        "ranger_admin_username" : "amb_ranger_admin",
        "ranger_admin_password" : "{{ ambari_props.ranger_security_options.ranger_admin_password }}",
{% if ambari_props.repos.hdp.major_version|int >= 3 -%}
        "rangerusersync_user_password" : "{{ ambari_props.ranger_security_options.ranger_admin_password }}",
        "rangertagsync_user_password" : "{{ ambari_props.ranger_security_options.ranger_admin_password }}",
        "keyadmin_user_password" : "{{ ambari_props.ranger_security_options.ranger_keyadmin_password }}",
{% endif %}
        "xasecure.audit.destination.db" : "false",
{% if namenode_groups|length > 0 %}
        "xasecure.audit.destination.hdfs" : "true",
{% else %}
        "xasecure.audit.destination.hdfs" : "false",
{% endif %}
        "xasecure.audit.destination.solr" : "true",
        "is_solrCloud_enabled": "true",
        "create_db_dbuser": "false"
      }
    },
{% endif %}
{% if rangerkms_hosts|length > 0 %}
    {
      "kms-properties" : {
        "DB_FLAVOR" : "{{ database_config.database_type|regex_replace('mariadb', 'mysql')|upper }}",
        "SQL_CONNECTOR_JAR" : "{{ database_config.mysql.jdbc_location }}",
        "KMS_MASTER_KEY_PASSWD" : "{{ ambari_props.ranger_security_options.kms_master_key_password }}",
        "db_host" : "{{ grains.fqdn }}",
        "db_name" : "{{ database_config.database_options.rangerkms.db_name }}",
        "db_user" : "rangerkms",
        "db_password" : "{{ database_config.database_options.rangerkms.db_password}}"
      }
    },
    {
      "dbks-site" : {
        {% if database_config.database_type == "mysql" or database_config.database_type == "mariadb" -%}
        "ranger.ks.jpa.jdbc.url": "jdbc:mysql://{{ grains.fqdn }}:{{ database_config.mysql.por }}/{{ database_config.database_options.rangerkms.db_name  }}",
        "ranger.ks.jpa.jdbc.driver": "com.mysql.jdbc.Driver"
        {% endif -%}
      }
    },
    {
      "kms-env" : {
        "create_db_user" : "false"
      }
    },
    {
      "kms-site" : {
{% if rangerkms_hosts|length > 1 %}
        "hadoop.kms.cache.enable" : "false",
        "hadoop.kms.cache.timeout.ms" : "0",
        "hadoop.kms.current.key.cache.timeout.ms" : "0",
        "hadoop.kms.authentication.signer.secret.provider" : "zookeeper",
        "hadoop.kms.authentication.signer.secret.provider.zookeeper.connection.string" : "{% for zk in zookeeper_hosts %}{{ zk }}:2181{% if not loop.last %},{% endif %}{% endfor %}",
{% endif %}
        "hadoop.kms.proxyuser.HTTP.hosts" : "*",
        "hadoop.kms.proxyuser.HTTP.users" : "*",
        "hadoop.kms.proxyuser.ranger.groups" : "*",
        "hadoop.kms.proxyuser.ranger.hosts" : "*",
        "hadoop.kms.proxyuser.ranger.users" : "*",
        "hadoop.kms.proxyuser.yarn.groups" : "*",
        "hadoop.kms.proxyuser.yarn.hosts" : "*",
        "hadoop.kms.proxyuser.yarn.users" : "*"
      }
    },
    {
      "ranger-kms-audit" : {
        "xasecure.audit.destination.db" : "false",
        "xasecure.audit.destination.hdfs" : "true",
        "xasecure.audit.destination.hdfs.dir" : "hdfs://{% if namenode_groups|length > 1 %}{{ hdfs_ha_name }}{% else %}{{ grains.fqdn }}:8020{% endif %}/ranger/audit",
        "xasecure.audit.destination.solr" : "true",
        "xasecure.audit.destination.solr.zookeepers" : "{% for zk in zookeeper_hosts %}{{ zk }}:2181{% if not loop.last %},{% endif %}{% endfor %}/infra-solr"
      }
    },
{% endif %}
{% if namenode_groups|length > 0 %}
    {
      "hadoop-env" : {
        "dtnode_heapsize" : "1024m",
        "namenode_heapsize" : "2048m",
        "namenode_opt_maxnewsize" : "384m",
        "namenode_opt_newsize" : "384m"
      }
    },
    {
      "hdfs-site" : {
        {% if namenode_groups|length > 1 -%}
        "dfs.client.failover.proxy.provider.{{ hdfs_ha_name }}" : "org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider",
        "dfs.ha.automatic-failover.enabled" : "true",
        "dfs.ha.fencing.methods" : "shell(/bin/true)",
        "dfs.ha.namenodes.{{ hdfs_ha_name }}" : "nn1,nn2",
        "dfs.namenode.http-address.{{ hdfs_ha_name }}.nn1" : "%HOSTGROUP::{{ namenode_groups[0] }}%:50070",
        "dfs.namenode.http-address.{{ hdfs_ha_name }}.nn2" : "%HOSTGROUP::{{ namenode_groups[1] }}%:50070",
        "dfs.namenode.https-address.{{ hdfs_ha_name }}.nn1" : "%HOSTGROUP::{{ namenode_groups[0] }}%:50470",
        "dfs.namenode.https-address.{{ hdfs_ha_name }}.nn2" : "%HOSTGROUP::{{ namenode_groups[1] }}%:50470",
        "dfs.namenode.rpc-address.{{ hdfs_ha_name }}.nn1" : "%HOSTGROUP::{{ namenode_groups[0] }}%:8020",
        "dfs.namenode.rpc-address.{{ hdfs_ha_name }}.nn2" : "%HOSTGROUP::{{ namenode_groups[1] }}%:8020",
        "dfs.namenode.shared.edits.dir" : "qjournal://{% for jn in journalnode_groups %}%HOSTGROUP::{{ jn }}%:8485{% if not loop.last %};{% endif %}{% endfor %}/{{ hdfs_ha_name }}",
        "dfs.nameservices" : "{{ hdfs_ha_name }}",
        {% endif -%}
{% if rangeradmin_hosts|length > 0 and ambari_props.ranger_options.enable_plugins|default(no) %}
        "dfs.namenode.inode.attributes.provider.class" : "org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer",
{% endif %}
{% if rangerkms_hosts|length > 0 %}
        "dfs.encryption.key.provider.uri" : "kms://http@{% for kmshost in rangerkms_hosts %}{{ kmshost }}{% if not loop.last %};{% endif %}{% endfor %}:9292/kms",
{% endif %}
        "dfs.datanode.data.dir" : "/hadoop/hdfs/data",
        "dfs.datanode.failed.volumes.tolerated" : "0",
        "dfs.replication" : "3"
      }
    },
    {
      "yarn-env" : {
{% if 'YARN_REGISTRY_DNS' in blueprint_all_services %}
        "registry.dns.bind-port": "{{ registry_dns_bind_port | default('53') }}",
{% endif %}
        "yarn_user" : "yarn"
      }
    },
    {
      "yarn-site" : {
        {% if resourcemanager_groups|length > 1 -%}
        "hadoop.registry.zk.quorum": "{% for zk in zookeeper_groups %}%HOSTGROUP::{{ zk }}%:2181{% if not loop.last %},{% endif %}{% endfor %}",
        "yarn.resourcemanager.recovery.enabled": "true",
        "yarn.resourcemanager.store.class" : "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
        "yarn.resourcemanager.cluster-id" : "yarn-cluster",
        "yarn.resourcemanager.ha.enabled" : "true",
        "yarn.resourcemanager.ha.automatic-failover.zk-base-path" : "/yarn-leader-election",
        "yarn.resourcemanager.ha.rm-ids" : "rm1,rm2",
        "yarn.resourcemanager.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8050",
        "yarn.resourcemanager.scheduler.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8030",
        "yarn.resourcemanager.resource-tracker.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8025",
        "yarn.resourcemanager.admin.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8141",
        "yarn.resourcemanager.hostname": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8088",
        "yarn.resourcemanager.hostname.rm1": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%",
        "yarn.resourcemanager.hostname.rm2": "%HOSTGROUP::{{ resourcemanager_groups[1] }}%",
        "yarn.resourcemanager.webapp.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8088",
        "yarn.resourcemanager.webapp.address.rm1": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8088",
        "yarn.resourcemanager.webapp.address.rm2": "%HOSTGROUP::{{ resourcemanager_groups[1] }}%:8088",
        "yarn.resourcemanager.webapp.https.address": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8090",
        "yarn.resourcemanager.webapp.https.address.rm1": "%HOSTGROUP::{{ resourcemanager_groups[0] }}%:8090",
        "yarn.resourcemanager.webapp.https.address.rm2": "%HOSTGROUP::{{ resourcemanager_groups[1] }}%:8090",
        "yarn.resourcemanager.zk-address": "{% for zk in zookeeper_groups %}%HOSTGROUP::{{ zk }}%:2181{% if not loop.last %},{% endif %}{% endfor %}",
        {% endif -%}
{% if rangeradmin_hosts|length > 0 and ambari_props.ranger_options.enable_plugins|default(no) %}
        "yarn.acl.enable" : "true",
        "yarn.authorization-provider": "org.apache.ranger.authorization.yarn.authorizer.RangerYarnAuthorizer",
{% endif %}
{% if 'YARN_REGISTRY_DNS' in blueprint_all_services %}
        "hadoop.registry.dns.bind-port": "{{ registry_dns_bind_port | default('53') }}",
{% endif %}
        "yarn.client.nodemanager-connect.retry-interval-ms" : "10000"
      }
    },
    {
      "tez-site" : {
        "tez.tez-ui.history-url.base": "http://{{ grains.fqdn }}:8080/#/main/view/TEZ/tez_cluster_instance"
      }
    },
    {
      "hive-site" : {
        {% if database_config.database_type != "embedded" -%}
        {% if database_config.database_type == "mysql" or database_config.database_type == "mariadb" -%}
        "javax.jdo.option.ConnectionDriverName": "com.mysql.jdbc.Driver",
        "javax.jdo.option.ConnectionURL": "jdbc:mysql://{{ grains.fqdn }}:{{ database_config.mysql.port }}/{{ database_config.database_options.hive.db_name }}",
        {% endif -%}
        "javax.jdo.option.ConnectionUserName": "hive",
        "javax.jdo.option.ConnectionPassword": "{{ database_config.database_options.hive.db_password }}",
        {% endif -%}
{% if rangeradmin_hosts|length > 0 and ambari_props.ranger_options.enable_plugins|default(no) %}
        "hive.security.authorization.enabled" : "true",
{% endif %}
        "hive.metastore.failure.retries" : "24"
      }
    },
    {
      "hiveserver2-site" : {
{% if rangeradmin_hosts|length > 0 and ambari_props.ranger_options.enable_plugins|default(no) %}
        "hive.security.authorization.enabled" : "true",
        "hive.security.authorization.manager" : "org.apache.ranger.authorization.hive.authorizer.RangerHiveAuthorizerFactory",
        "hive.conf.restricted.list" : "hive.security.authenticator.manager,hive.security.authorization.manager,hive.security.metastore.authorization.manager,hive.security.metastore.authenticator.manager,hive.users.in.admin.role,hive.server2.xsrf.filter.enabled,hive.security.authorization.enabled",
{% endif %}
        "hive.metastore.metrics.enabled" : "true"
      }
    },
    {
      "hive-env" : {
        {% if database_config.database_type != "embedded" -%}
        {% if database_config.database_type == "mysql" or database_config.database_type == "mariadb" -%}
        "hive_database": "Existing MySQL / MariaDB Database",
        "hive_database_type": "mysql",
        {% endif -%}
        "hive_database_name": "{{ database_config.database_options.hive.db_name }}",
        {% endif -%}
{% if rangeradmin_hosts|length > 0 and ambari_props.ranger_options.enable_plugins|default(no) %}
        "hive_security_authorization" : "Ranger",
{% endif %}
{% if 'ATLAS_SERVER' in blueprint_all_services %}
        "hive.atlas.hook": "true",
{% endif %}
        "hive_user" : "hive"
      }
    },
    {
      "sqoop-env" : {
{% if 'ATLAS_SERVER' in blueprint_all_services %}
        "sqoop.atlas.hook" : "true",
{% endif %}
        "sqoop_user" : "sqoop"
      }
    },
    {
      "hbase-site" : {
        {% if namenode_groups|length > 1 -%}
        "hbase.rootdir": "hdfs://{{ hdfs_ha_name }}/apps/hbase/data",
        {% endif -%}
{% if rangeradmin_hosts|length > 0 and ambari_props.ranger_options.enable_plugins|default(no) %}
        "hbase.security.authorization" : "true",
        "hbase.coprocessor.master.classes" : "org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor",
        "hbase.coprocessor.region.classes" : "org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint,org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor",
        "hbase.coprocessor.regionserver.classes" : "org.apache.ranger.authorization.hbase.RangerAuthorizationCoprocessor",
{% endif %}
        "hbase.client.retries.number" : "35"
      }
    },
    {
      "core-site": {
        {% if namenode_groups|length > 1 -%}
        "fs.defaultFS" : "hdfs://{{ hdfs_ha_name }}",
        "ha.zookeeper.quorum" : "{% for zk in zookeeper_groups %}%HOSTGROUP::{{ zk }}%:2181{% if not loop.last %},{% endif %}{% endfor %}",
        {% endif -%}
{% if (security|lower == "mit-kdc" or security|lower == "active-directory") and ambari_props.security_options.http_authentication|default(no) %}
        "hadoop.http.authentication.simple.anonymous.allowed" : "false",
        "hadoop.http.authentication.signature.secret.file" : "/etc/security/http_secret",
        "hadoop.http.authentication.type" : "kerberos",
        "hadoop.http.authentication.kerberos.keytab" : "/etc/security/keytabs/spnego.service.keytab",
        "hadoop.http.authentication.kerberos.principal" : "HTTP/_HOST@{{ ambari_props.security_options.realm }}",
        "hadoop.http.filter.initializers" : "org.apache.hadoop.security.AuthenticationFilterInitializer",
        "hadoop.http.authentication.cookie.domain" : "{{ ambari_props.security_options.realm|lower }}",
{% else %}
        "hadoop.http.authentication.simple.anonymous.allowed" : "true",
        "hadoop.http.authentication.type" : "simple",
{% endif %}
{% if rangerkms_hosts|length > 0 %}
        "hadoop.security.key.provider.path" : "kms://http@{% for kmshost in rangerkms_hosts %}{{ kmshost }}{% if not loop.last %};{% endif %}{% endfor %}:9292/kms",
        "hadoop.proxyuser.kms.groups" : "*",
{% endif %}
        "fs.trash.interval" : "360"
      }
    },
{% if 'ATLAS_SERVER' in blueprint_all_services %}
    {
      "atlas-env" : {
        "atlas.admin.password": "{{ ambari_props.atlas_security_options.admin_password }}",
        "atlas.admin.username": "admin"
      }
    },
    {
      "application-properties" : {
        "atlas.audit.hbase.zookeeper.quorum": "{% for zk in zookeeper_groups %}%HOSTGROUP::{{ zk }}%{% if not loop.last %},{% endif %}{% endfor %}",
        "atlas.graph.index.search.solr.zookeeper-url": "{% for zk in zookeeper_groups %}%HOSTGROUP::{{ zk }}%:2181/infra-solr{% if not loop.last %},{% endif %}{% endfor %}",
        "atlas.graph.storage.hostname": "{% for zk in zookeeper_groups %}%HOSTGROUP::{{ zk }}%{% if not loop.last %},{% endif %}{% endfor %}",
        "atlas.kafka.zookeeper.connect": "{% for zk in zookeeper_groups %}%HOSTGROUP::{{ zk }}%:2181{% if not loop.last %},{% endif %}{% endfor %}",
        "atlas.kafka.bootstrap.servers": "{% for k in kafka_groups %}%HOSTGROUP::{{ k }}%:6667{% if not loop.last %},{% endif %}{% endfor %}",
        "atlas.rest.address": "{% for at in atlas_hosts %}http://{{ at }}:21000{% if not loop.last %},{% endif %}{% endfor %}",
        "atlas.proxyusers": "knox"
      }
    },
{% endif %}
{% if 'KNOX_GATEWAY' in blueprint_all_services %}
    {
      "knox-env" : {
        "knox_master_secret": "{{ ambari_props.knox_security_options.master_secret }}",
        "knox_user": "knox",
        "knox_group": "knox"
      }
    },
{% endif %}
    {
      "storm-site": {
{% if rangeradmin_hosts|length > 0 and ambari_props.ranger_options.enable_plugins|default(no) and (security|lower == "mit-kdc" or security|lower == "active-directory") %}
        "nimbus.authorizer" : "org.apache.ranger.authorization.storm.authorizer.RangerStormAuthorizer",
{% endif %}
        "storm.zookeeper.retry.intervalceiling.millis" : "30000"
      }
    },
    {
      "kafka-broker": {
{% if rangeradmin_hosts|length > 0 and ambari_props.ranger_options.enable_plugins|default(no) %}
        "authorizer.class.name" : "org.apache.ranger.authorization.kafka.authorizer.RangerKafkaAuthorizer",
{% endif %}
        "zookeeper.session.timeout.ms" : "30000"
      }
    },
    {
      "zoo.cfg": {
        "clientPort" : "2181"
      }
    }
  ],
{% endif %}
  "host_groups" : [
    {% for blueprint_item in blueprint_dynamic -%}

    {
      "name" : "{{ blueprint_item.host_group }}",
      "configurations" : [ ],
      "components" : [
        {% for client in blueprint_item.clients -%}
        { "name" : "{{ client }}" },
        {% endfor %}
{% if security|lower == "mit-kdc" or security|lower == "active-directory" -%}
        { "name" : "KERBEROS_CLIENT" },
{% endif %}
        {% for service in blueprint_item.services -%}
        { "name" : "{{ service }}" }{% if not loop.last %},{% endif %}

        {% endfor %}

      ]
    }{% if not loop.last %},{% endif %}

    {% endfor %}

  ],
  "Blueprints" : {
{% if security|lower == "mit-kdc" or security|lower == "active-directory" %}
    "security" : {
      "type" : "KERBEROS"
    },
{% endif %}
    "stack_name" : "HDP",
    "stack_version" : "{{ ambari_props.repos.hdp.minor_version }}"
  }
}