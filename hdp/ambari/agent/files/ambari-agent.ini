# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific

# This file is managed by Salt
{%- from 'hdp/ambari/map.jinja' import ambari_props with context %}
{%- set config = ambari_props.ambari_agent_conf %}
{%- set ip_dict = salt['mine.get']('*', 'network.ip_addrs') %}
{%- set ip_list = ip_dict.values() | sort %}

[server]
hostname={{ ip_list[0][0] }}
url_port={{ config.server.url_port }}
secured_url_port={{ config.server.secured_url_port }}
connect_retry_delay={{ config.server.connect_retry_delay }}
max_reconnect_retry_delay={{ config.server.max_reconnect_retry_delay }}


[agent]
logdir={{ config.agent.logdir }}
piddir={{ config.agent.piddir }}
prefix={{ config.agent.prefix }}
loglevel={{ config.agent.loglevel }}
data_cleanup_interval={{ config.agent.data_cleanup_interval }}
data_cleanup_max_age={{ config.agent.data_cleanup_max_age }}
data_cleanup_max_size_MB = {{ config.agent.data_cleanup_max_size_MB }}
ping_port={{ config.agent.ping_port }}
cache_dir={{ config.agent.cache_dir }}
tolerate_download_failures={{ config.agent.tolerate_download_failures | lower}}
run_as_user={{ config.agent.run_as_user }}
command_update_output={{ config.agent.command_update_output }}
parallel_execution={{ config.agent.parallel_execution }}
alert_reports_interval={{ config.agent.alert_reports_interval }}
command_reports_interval={{ config.agent.command_reports_interval }}
status_commands_run_interval={{ config.agent.status_commands_run_interval }}
alert_grace_period={{ config.agent.alert_grace_period }}
status_command_timeout={{ config.agent.status_command_timeout }}
; (send_alert_changes_only) - enabling this is necessary to deploy big perf clusters
send_alert_changes_only={{ config.agent.send_alert_changes_only }}
alert_kinit_timeout={{ config.agent.alert_kinit_timeout }}
system_resource_overrides={{ config.agent.system_resource_overrides }}
; memory_threshold_soft_mb=400
; memory_threshold_hard_mb=1000
; ignore_mount_points=/mnt/custom1,/mnt/custom2

[security]
keysdir={{ config.security.keysdir }}
server_crt={{ config.security.server_crt }}
passphrase_env_var_name={{ config.security.passphrase_env_var_name }}
ssl_verify_cert={{ config.security.ssl_verify_cert }}
credential_lib_dir={{ config.security.credential_lib_dir }}
credential_conf_dir={{ config.security.credential_conf_dir }}
credential_shell_cmd={{ config.security.credential_shell_cmd }}
force_https_protocol={{ config.security.force_https_protocol }}

[network]
; this option apply only for Agent communication
use_system_proxy_settings={{ config.network.use_system_proxy_settings | lower }}

[services]
pidLookupPath={{ config.services.pidLookupPath }}

[heartbeat]
state_interval_seconds={{ config.heartbeat.state_interval }}
dirs={{ config.heartbeat.dirs }}
; 0 - unlimited
log_max_symbols_size={{ config.heartbeat.log_max_symbols_size }}
idle_interval_min={{ config.heartbeat.idle_interval_min }}
idle_interval_max={{ config.heartbeat.idle_interval_max }}


[logging]
syslog_enabled={{ config.logging.syslog_enabled }}
